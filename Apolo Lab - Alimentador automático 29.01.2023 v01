//Apolo Lab - Alimentador autom√°tico

#include <Servo.h> //servo library
#define SERVO 6 //digital input 6 PWM
Servo servo; //servo variable
int pos; //servo position
int fd_ct = 0; //feed count
int fd_tm = 0; //feed time
int fd_fq = 24 * 60; //time frequency of feed (min)
int i = 0;
int buzzer = 11;
int estado = 1;

void setup ()
{
  pinMode(buzzer, OUTPUT); //buzzer + output, - input GND
  servo.attach(9);
  Serial.begin(9600);
  for (i = 0; i < 25; i++) { //Device ready
    servo.write(90);
    delay(100);
  }

  Serial.println("Feed routines..."); //feed rountine
  for (i = 0; i < 4; i++) {
    digitalWrite(buzzer, HIGH);
    delay(200);
    digitalWrite(buzzer, LOW);
    delay(200);
  }
  for (pos = 90; pos < 180; pos++)
  {
    servo.write(pos);
    delay(10);
  }
  for (pos = 180; pos > 90; pos--)
  {
    servo.write(pos);
    delay(10);
  }
  for (pos = 90; pos > 0; pos--)
  {
    servo.write(pos);
    delay(10);
  }
  for (pos = 0; pos < 90; pos++)
  {
    servo.write(pos);
    delay(10);
  }
  fd_tm = 0;
  fd_ct++;
}

void loop()
{
  fd_tm++;
  servo.write(90);
  Serial.print("Time (s): ");
  Serial.print(fd_tm);
  Serial.print("/ Count: ");
  Serial.println(fd_ct);
  delay(1000);
  if (fd_tm >= (fd_fq * 60) && estado == 1) {
    Serial.println("Feed routines..."); //feed rountine
    for (i = 0; i < 4; i++) {
      digitalWrite(buzzer, HIGH);
      delay(200);
      digitalWrite(buzzer, LOW);
      delay(200);
    }
    for (pos = 90; pos < 180; pos++)
    {
      servo.write(pos);
      delay(10);
    }
    for (pos = 180; pos > 90; pos--)
    {
      servo.write(pos);
      delay(10);
    }
    estado = 2;
    fd_tm = 0;
    fd_ct++;
  }

  if (fd_tm >= (fd_fq * 60) && estado == 2) {
    Serial.println("Feed routines..."); //feed rountine
    for (i = 0; i < 4; i++) {
      digitalWrite(buzzer, HIGH);
      delay(200);
      digitalWrite(buzzer, LOW);
      delay(200);
    }
    for (pos = 90; pos > 0; pos--)
    {
      servo.write(pos);
      delay(10);
    }
    for (pos = 0; pos < 90; pos++)
    {
      servo.write(pos);
      delay(10);
    }
    estado = 1;
    fd_tm = 0;
    fd_ct++;
  }
}
